// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: users.sql

package mybb

import (
	"context"
	"database/sql"
)

const getUserFields = `-- name: GetUserFields :one
SELECT u.uid, u.username, u.password, u.salt, u.loginkey, u.email, u.postnum, u.threadnum, u.avatar, u.avatardimensions, u.avatartype, u.usergroup, u.additionalgroups, u.displaygroup, u.usertitle, u.regdate, u.lastactive, u.lastvisit, u.lastpost, u.website, u.icq, u.skype, u.google, u.birthday, u.birthdayprivacy, u.signature, u.allownotices, u.hideemail, u.subscriptionmethod, u.invisible, u.receivepms, u.receivefrombuddy, u.pmnotice, u.pmnotify, u.buddyrequestspm, u.buddyrequestsauto, u.threadmode, u.showimages, u.showvideos, u.showsigs, u.showavatars, u.showquickreply, u.showredirect, u.ppp, u.tpp, u.daysprune, u.dateformat, u.timeformat, u.timezone, u.dst, u.dstcorrection, u.buddylist, u.ignorelist, u.style, u.away, u.awaydate, u.returndate, u.awayreason, u.pmfolders, u.notepad, u.referrer, u.referrals, u.reputation, u.regip, u.lastip, u.language, u.timeonline, u.showcodebuttons, u.totalpms, u.unreadpms, u.warningpoints, u.moderateposts, u.moderationtime, u.suspendposting, u.suspensiontime, u.suspendsignature, u.suspendsigtime, u.coppauser, u.classicpostbit, u.loginattempts, u.usernotes, u.sourceeditor, u.loginlockoutexpiry, f.ufid, f.fid1, f.fid2, f.fid3
FROM PBMnet_users u
         LEFT JOIN PBMnet_userfields f ON (f.ufid = u.uid)
WHERE u.uid = ?
LIMIT 1
`

type GetUserFieldsRow struct {
	Uid                uint32
	Username           string
	Password           string
	Salt               string
	Loginkey           string
	Email              string
	Postnum            uint32
	Threadnum          uint32
	Avatar             string
	Avatardimensions   string
	Avatartype         string
	Usergroup          uint32
	Additionalgroups   string
	Displaygroup       uint32
	Usertitle          string
	Regdate            uint32
	Lastactive         uint32
	Lastvisit          uint32
	Lastpost           uint32
	Website            string
	Icq                string
	Skype              string
	Google             string
	Birthday           string
	Birthdayprivacy    string
	Signature          string
	Allownotices       bool
	Hideemail          bool
	Subscriptionmethod bool
	Invisible          bool
	Receivepms         bool
	Receivefrombuddy   bool
	Pmnotice           bool
	Pmnotify           bool
	Buddyrequestspm    bool
	Buddyrequestsauto  bool
	Threadmode         string
	Showimages         bool
	Showvideos         bool
	Showsigs           bool
	Showavatars        bool
	Showquickreply     bool
	Showredirect       bool
	Ppp                uint32
	Tpp                uint32
	Daysprune          uint32
	Dateformat         string
	Timeformat         string
	Timezone           string
	Dst                bool
	Dstcorrection      bool
	Buddylist          string
	Ignorelist         string
	Style              uint32
	Away               bool
	Awaydate           uint32
	Returndate         string
	Awayreason         string
	Pmfolders          string
	Notepad            string
	Referrer           uint32
	Referrals          uint32
	Reputation         int32
	Regip              []byte
	Lastip             []byte
	Language           string
	Timeonline         uint32
	Showcodebuttons    bool
	Totalpms           uint32
	Unreadpms          uint32
	Warningpoints      uint32
	Moderateposts      bool
	Moderationtime     uint32
	Suspendposting     bool
	Suspensiontime     uint32
	Suspendsignature   bool
	Suspendsigtime     uint32
	Coppauser          bool
	Classicpostbit     bool
	Loginattempts      uint32
	Usernotes          string
	Sourceeditor       bool
	Loginlockoutexpiry int32
	Ufid               sql.NullInt32
	Fid1               sql.NullString
	Fid2               sql.NullString
	Fid3               sql.NullString
}

func (q *Queries) GetUserFields(ctx context.Context, uid uint32) (GetUserFieldsRow, error) {
	row := q.db.QueryRowContext(ctx, getUserFields, uid)
	var i GetUserFieldsRow
	err := row.Scan(
		&i.Uid,
		&i.Username,
		&i.Password,
		&i.Salt,
		&i.Loginkey,
		&i.Email,
		&i.Postnum,
		&i.Threadnum,
		&i.Avatar,
		&i.Avatardimensions,
		&i.Avatartype,
		&i.Usergroup,
		&i.Additionalgroups,
		&i.Displaygroup,
		&i.Usertitle,
		&i.Regdate,
		&i.Lastactive,
		&i.Lastvisit,
		&i.Lastpost,
		&i.Website,
		&i.Icq,
		&i.Skype,
		&i.Google,
		&i.Birthday,
		&i.Birthdayprivacy,
		&i.Signature,
		&i.Allownotices,
		&i.Hideemail,
		&i.Subscriptionmethod,
		&i.Invisible,
		&i.Receivepms,
		&i.Receivefrombuddy,
		&i.Pmnotice,
		&i.Pmnotify,
		&i.Buddyrequestspm,
		&i.Buddyrequestsauto,
		&i.Threadmode,
		&i.Showimages,
		&i.Showvideos,
		&i.Showsigs,
		&i.Showavatars,
		&i.Showquickreply,
		&i.Showredirect,
		&i.Ppp,
		&i.Tpp,
		&i.Daysprune,
		&i.Dateformat,
		&i.Timeformat,
		&i.Timezone,
		&i.Dst,
		&i.Dstcorrection,
		&i.Buddylist,
		&i.Ignorelist,
		&i.Style,
		&i.Away,
		&i.Awaydate,
		&i.Returndate,
		&i.Awayreason,
		&i.Pmfolders,
		&i.Notepad,
		&i.Referrer,
		&i.Referrals,
		&i.Reputation,
		&i.Regip,
		&i.Lastip,
		&i.Language,
		&i.Timeonline,
		&i.Showcodebuttons,
		&i.Totalpms,
		&i.Unreadpms,
		&i.Warningpoints,
		&i.Moderateposts,
		&i.Moderationtime,
		&i.Suspendposting,
		&i.Suspensiontime,
		&i.Suspendsignature,
		&i.Suspendsigtime,
		&i.Coppauser,
		&i.Classicpostbit,
		&i.Loginattempts,
		&i.Usernotes,
		&i.Sourceeditor,
		&i.Loginlockoutexpiry,
		&i.Ufid,
		&i.Fid1,
		&i.Fid2,
		&i.Fid3,
	)
	return i, err
}
